Qualcomm CPR (Core Power Reduction) Regulator

CPR regulator device is for Qualcomm RBCPR (RapidBridge CPR) on
	application processor core. It takes voltage corner level
	as input and converts it to actual voltage based on the
	suggestions from factory production process. When CPR is
	enabled for application processer core, it will suggest
	scaling the voltage up or down for best performance and
	power of the core. The scaling based on factory production
	process is called PVS (Process Voltage Scaling) with efuse
	bits to indicate what bin (and voltage range) a chip is in.

Required properties:
- compatible:			Must be "qcom,cpr-regulator"
- reg:				Register addresses for RBCPR, RBCPR clock
				select, PVS and CPR eFuse address
- reg-names:			Register names. Must be "rbcpr", "rbcpr_clk",
				"efuse_addr"
- regulator-name:		A string used to describe the regulator
- interrupts:			Interrupt line from RBCPR to interrupt controller.
- qcom,cpr-fuse-corners:	Number of fuse corners present.  Many other properties
				are sized based upon this value.
- regulator-min-microvolt:	Minimum corner value which should be 1 to
				represent the lowest supported corner.
- regulator-max-microvolt:	Maximum corner value which should be equal to
				qcom,cpr-fuse-corners if consumers request fuse
				corners or the length of qcom,cpr-corner-map if
				consumers request virtual corners.
- qcom,cpr-voltage-ceiling:	Array of ceiling voltages in microvolts for fuse
				corners ordered from lowest voltage corner to highest
				voltage corner.  This property must be of length
				defined by qcom,cpr-fuse-corners.
- qcom,cpr-voltage-floor:	Array of floor voltages in microvolts for fuse
				corners ordered from lowest voltage corner to highest
				voltage corner.  This property must be of length
				defined by qcom,cpr-fuse-corners.
- vdd-apc-supply:		Regulator to supply VDD APC power
- qcom,vdd-apc-step-up-limit:	Limit of vdd-apc-supply steps for scaling up.
- qcom,vdd-apc-step-down-limit:	Limit of vdd-apc-supply steps for scaling down.
- qcom,cpr-ref-clk:		The reference clock in kHz.
- qcom,cpr-timer-delay:		The delay in microseconds for the timer interval.
- qcom,cpr-timer-cons-up:	Consecutive number of timer interval (qcom,cpr-timer-delay)
				occurred before issuing UP interrupt.
- qcom,cpr-timer-cons-down:	Consecutive number of timer interval (qcom,cpr-timer-delay)
				occurred before issuing DOWN interrupt.
- qcom,cpr-irq-line:		Internal interrupt route signal of RBCPR, one of 0, 1 or 2.
- qcom,cpr-step-quotient:	Number of CPR quotient (Ring Oscillator(RO) count) per vdd-apc-supply step
				to issue error_steps.
- qcom,cpr-up-threshold:	The threshold for CPR to issue interrupt when
				error_steps is greater than it when stepping up.
- qcom,cpr-down-threshold:	The threshold for CPR to issue interrupt when
				error_steps is greater than it when stepping down.
- qcom,cpr-idle-clocks:		Idle clock cycles RO can be in.
- qcom,cpr-gcnt-time:		The time for gate count in microseconds.
- qcom,cpr-apc-volt-step:	The voltage in microvolt per CPR step, such as 5000uV.
- qcom,cpr-fuse-row:		Array of row number of CPR fuse and method to read that row. It should have
				index and value like this:
				 [0] => the fuse row number
				 [1] => fuse reading method, 0 for direct reading or 1 for SCM reading
- qcom,cpr-fuse-target-quot:	Array of bit positions in the primary CPR fuse row defined
				by qcom,cpr-fuse-row for the target quotients of each
				fuse corner.  Each bit position corresponds to the LSB
				of the quotient parameter.  The elements in the array
				are ordered from lowest voltage corner to highest voltage
				corner.  This property must be of length defined by
				qcom,cpr-fuse-corners.
- qcom,cpr-fuse-ro-sel:		Array of bit positions in the primary CPR fuse row defined
				by qcom,cpr-fuse-row for the ring oscillator selection for each
				fuse corner.  Each bit position corresponds to the LSB
				of the RO select parameter.  The elements in the array
				are ordered from lowest voltage corner to highest voltage
				corner.  This property must be of length defined by
				qcom,cpr-fuse-corners.

Optional properties:
- vdd-mx-supply:		Regulator to supply memory power as dependency
				of VDD APC.
- qcom,vdd-mx-vmax:		The maximum voltage in uV for vdd-mx-supply. This
				is required when vdd-mx-supply is present.
- qcom,vdd-mx-vmin-method:	The method to determine the minimum voltage for
				vdd-mx-supply, which can be one of following
				choices compared with VDD APC:
				  0 => equal to the voltage(vmin) of VDD APC
				  1 => equal to PVS corner ceiling voltage
				  2 => equal to slow speed corner ceiling
				  3 => equal to qcom,vdd-mx-vmax
				  4 => equal to VDD_APC corner mapped vdd-mx voltage
				This is required when vdd-mx-supply is present.
- qcom,vdd-mx-corner-map:	Array of integers which defines the mapping from VDD_APC
				fuse voltage corners to vdd-mx-supply voltages.
				Each element is a voltage to request from vdd-mx
				for the corresponding fuse corner.  The elements
				in the array are ordered from lowest voltage corner
				to highest voltage corner.  This property must be
				of length defined by qcom,cpr-fuse-corners.
				This is required when the qcom,vdd-mx-vmin-method
				property has a value of 4.
- qcom,pvs-voltage-table: 	Array of N-tuples in which each tuple specifies the
				initial voltage in microvolts of the PVS bin for each
				fuse voltage corner.  The location or 0-based index
				of a tuple in the list corresponds to the PVS bin number.
				Each tuple must be of length defined by qcom,cpr-fuse-corners.
				A given cpr-regulator device must have either
				qcom,pvs-voltage-table specified or
				qcom,cpr-fuse-init-voltage (and its associated properties).
- qcom,pvs-fuse-redun-sel:	Array of 5 elements to indicate where to read the bits, what value to
				compare with in order to decide if the redundant PVS fuse bits would be
				used instead of the original bits and method to read fuse row, reading
				register through SCM or directly. The 5 elements with index [0..4] are:
				  [0] => the fuse row number of the selector
				  [1] => LSB bit position of the bits
				  [2] => number of bits
				  [3] => the value to indicate redundant selection
				  [4] => fuse reading method, 0 for direct reading or 1 for SCM reading
				When the value of the fuse bits specified by first 3 elements equals to
				the value in 4th element, redundant PVS fuse bits should be selected.
				Otherwise, the original PVS bits should be selected. If the 5th
				element is 0, read the fuse row from register directly. Otherwise,
				read it through SCM.
				This property is required if qcom,pvs-voltage-table is present.
- qcom,pvs-fuse:		Array of 4 elements to indicate the bits for PVS fuse and read method.
				The array should have index and value like this:
				  [0] => the PVS fuse row number
				  [1] => LSB bit position of the bits
				  [2] => number of bits
				  [3] => fuse reading method, 0 for direct reading or 1 for SCM reading
				This property is required if qcom,pvs-voltage-table is present.
- qcom,pvs-fuse-redun:		Array of 4 elements to indicate the bits for redundant PVS fuse.
				The array should have index and value like this:
				  [0] => the redundant PVS fuse row number
				  [1] => LSB bit position of the bits
				  [2] => number of bits
				  [3] => fuse reading method, 0 for direct reading or 1 for SCM reading
				This property is required if qcom,pvs-voltage-table is present.
- qcom,cpr-fuse-redun-sel:	Array of 5 elements to indicate where to read the bits, what value to
				compare with in order to decide if the redundant CPR fuse bits would be
				used instead of the original bits and method to read fuse row, using SCM
				to read or read register directly. The 5 elements with index [0..4] are:
				  [0] => the fuse row number of the selector
				  [1] => LSB bit position of the bits
				  [2] => number of bits
				  [3] => the value to indicate redundant selection
				  [4] => fuse reading method, 0 for direct reading or 1 for SCM reading
				When the value of the fuse bits specified by first 3 elements equals to
				the value in 4th element, redundant CPR fuse bits should be selected.
				Otherwise, the original CPR bits should be selected. If the 5th element
				is 0, read the fuse row from register directly. Otherwise, read it through
				SCM.
- qcom,cpr-fuse-redun-row:	Array of row number of redundant CPR fuse and method to read that
				row. It should have index and value like this:
				 [0] => the redundant fuse row number
				 [1] => the value to indicate reading the fuse row directly or using SCM
				This property is required if qcom,cpr-fuse-redun-sel is present.
- qcom,cpr-fuse-redun-target-quot:	Array of bit positions in the redundant CPR fuse row defined
				by qcom,cpr-fuse-redun-row for the target quotients of each
				fuse corner.  Each bit position corresponds to the LSB
				of the quotient parameter.  The elements in the array
				are ordered from lowest voltage corner to highest voltage corner.
				This property must be of length defined by qcom,cpr-fuse-corners.
				This property is required if qcom,cpr-fuse-redun-sel is present.
- qcom,cpr-fuse-redun-ro-sel:	Array of bit positions in the redundant CPR fuse row defined
				by qcom,cpr-fuse-redun-row for the ring oscillator select of each
				fuse corner.  Each bit position corresponds to the LSB of the RO
				select parameter.  The elements in the array are ordered from
				lowest voltage corner to highest voltage corner.
				This property must be of length defined by qcom,cpr-fuse-corners.
				This property is required if qcom,cpr-fuse-redun-sel is present.
- qcom,cpr-fuse-redun-bp-cpr-disable:	Redundant bit position of the bit to indicate if CPR should be disable
- qcom,cpr-fuse-redun-bp-scheme:	Redundant bit position of the bit to indicate if it's a global/local scheme
					This property is required if cpr-fuse-redun-bp-cpr-disable
					is present, and vise versa.
- qcom,cpr-fuse-bp-cpr-disable:	Bit position of the bit to indicate if CPR should be disabled
- qcom,cpr-fuse-bp-scheme:     Bit position of the bit to indicate if it's a global/local scheme
- qcom,cpr-fuse-target-quot-size:	Array of target quotient parameter bit sizes in the primary
				or redundant CPR fuse row for each fuse corner.  The elements in the
				array are ordered from lowest voltage corner to highest voltage corner.
				If this property is not present, then all target quotient fuse values
				are assumed to be the default length of 12 bits.
- qcom,cpr-fuse-target-quot-scale:	Array of doubles which defines the scaling coefficients to decode
				the target quotients of each fuse corner.  The first element in each
				double represents the offset to add to the scaled quotient.  The second
				element represents the multiplier to scale the quotient by.  For example,
				given a tuple <A B>, quot_decoded = A + (B * quot_raw).
				The doubles in the array are ordered from lowest voltage corner to highest
				voltage corner.  This property must contain a number of doubles equal to
				the value of qcom,cpr-fuse-corners.  If this property is not present,
				then all target quotient parameters are assumed to have an offset of 0
				and a multiplier of 1 (i.e. no decoding needed).
- qcom,cpr-enable:		Present: CPR enabled by default.
				Not Present: CPR disable by default.
- qcom,cpr-fuse-cond-min-volt-sel:	Array of 5 elements to indicate where to read the bits,  what value to
				compare with in order to decide if the conditional minimum apc voltage needs
				to be applied and the fuse reading method.
				The 5 elements with index[0..4] are:
				[0] => the fuse row number;
				[1] => LSB bit position of the bits;
				[2] => number of the bits;
				[3] => the expected data to read;
				[4] => fuse reading method, 0 for direct reading or 1 for SCM reading;
				When the value of the fuse bits specified by first 3 elements is not equal to
				the value in 4th element, then set the apc voltage for all parts running
				at each voltage corner to be not lower than the voltage defined
				using "qcom,cpr-cond-min-voltage".
- qcom,cpr-cond-min-voltage:	Minimum voltage in microvolts allowed for cpr-regulator output if the fuse bits
				defined in qcom,cpr-fuse-cond-min-volt-sel have not been programmed with the
				expected data. This is required if cpr-fuse-cond-min-volt-sel is present.
- qcom,cpr-fuse-uplift-sel: 	Array of 5 elements to indicate where to read the bits, what value to
				compare with in order to enable or disable the pvs voltage uplift workaround,
				and the fuse reading method.
				The 5 elements with index[0..4] are:
				[0]: => the fuse row number of the selector;
				[1]: => LSB bit position of the bits;
				[2]: => number of the bits;
				[3]: => the value to indicate if the apc pvs voltage uplift workaround will
					be enabled;
				[4]: => fuse reading method, 0 for direct reading or 1 for SCM reading.
				When the value of the fuse bits specified by first 3 elements equals to the
				value in 4th element, the pvs voltage uplift workaround will be enabled.
- qcom,speed-bin-fuse-sel:	Array of 4 elements to indicate where to read the speed bin of the processor,
				and the fuse reading method.
				The 4 elements with index[0..3] are:
				[0]: => the fuse row number of the selector;
				[1]: => LSB bit position of the bits;
				[2]: => number of the bits;
				[3]: => fuse reading method, 0 for direct reading or 1 for SCM reading.
				This is required if cpr-fuse-uplift-disable-sel is present.
- qcom,cpr-uplift-voltage:	Uplift in microvolts used for increasing pvs init voltage. If this property is present,
				This is required if cpr-fuse-uplift-disable-sel is present.
- qcom,cpr-uplift-max-volt:	Maximum voltage in microvolts used for pvs voltage uplift workaround to limit
				the maximum pvs voltage.
				This is required if cpr-fuse-uplift-disable-sel is present.
- qcom,cpr-uplift-quotient:	Array of target quotient increments to add to the fused quotients of each
				fuse corner as part of the PVS voltage uplift workaround.
				The elements in the array are ordered from lowest voltage
				corner to highest voltage corner.  This property must be of
				length defined by qcom,cpr-fuse-corners.  This is required
				if cpr-fuse-uplift-disable-sel is present.
- qcom,cpr-uplift-speed-bin:	The speed bin value corresponding to one type of processor which needs to apply the
				pvs voltage uplift workaround.
				This is required if cpr-fuse-uplift-disable-sel is present.
- qcom,cpr-quotient-adjustment:	Array of target quotient adjustments to add to the fused quotients of each
				fuse corner.  The elements in the array are ordered from lowest voltage
				corner to highest voltage corner.  This property must be of length defined
				by qcom,cpr-fuse-corners.  If this property is specified, then the quotient
				adjustment values are added to the target quotient values read from fuses
				before writing them into the CPR GCNT target control registers.
				This property can be used to add static margin to the voltage rail managed by the CPR controller.
- qcom,cpr-clamp-timer-interval:	The number of 64 reference clock cycle blocks to delay for whenever
					the clamp signal, sensor mask registers or sensor bypass registers
					change.  The CPR controller loop is disabled during this delay.
					Supported values are 0 to 255.  If this property is not specified,
					then a value of 0 is assumed.  Note that if this property has a
					value greater than 0, then software cannot accurately determine the
					error_steps value that corresponds to a given CPR measurement
					unless processor power collapsing is disabled.  If this property
					has a value of 0, then the CPR controller loop is not disabled and
					re-enabled while idle if the clamp signal changes.  Instead, it
					will remain idle until software issues an ACK or NACK command.
					This ensures that software can read the error_steps value which
					resulted in the CPR up or down interrupt.  Setting this property to
					a value greater than 0 is useful for resetting the CPR sensors of a
					processor that uses BHS type voltage switches in order to avoid
					anomalous CPR up interrupts when exiting from power collapse.
- vdd-apc-optional-prim-supply:	Present: Regulator of highest priority to supply VDD APC power
				Not Present: No such regulator.
- vdd-apc-optional-sec-supply:	Present: Regulator of second highest priority to supply VDD APC power.
				Not Present: No such regulator.
- qcom,cpr-speed-bin-max-corners: Array of (N+2)-tuples in which each tuple maps a CPU speed bin and PVS version to
				the maximum virtual voltage corner corresponding to each fuse corner.  The value N
				corresponds to the number of fuse corners specified by qcom,cpr-fuse-corners.
				The elements in one tuple are:
				[0]: =>		the speed bin of the CPU. If the device doesn't have a speed bin,
						fuse, then set the value to 0xFFFFFFFF.
				[1]: =>		the PVS version of the CPU. If the device doesn't have a PVS version
						fuse, then set the value to 0.
				[2 - N+1]: =>	the max virtual voltage corner value corresponding to each fuse corner
						for this speed bin, ordered from lowest voltage corner to highest
						voltage corner.
				No CPR target quotient scaling is applied on chips which have a speed bin + PVS version
				pair that does not appear in one of the tuples in this property. If the property is
				specified, then quotient scaling is enabled for the highest voltage corner. If this property is
				not specified, then no quotient scaling can take place.
- qcom,cpr-corner-map:		Array of elements of fuse corner value for each virtual corner.
				The location or 1-based index of an element in the list corresponds to
				the virtual corner value. For example, the first element in the list is the fuse corner
				value that virtual corner 1 maps to.
				This property is required if qcom,cpr-speed-bin-max-corners is present.
- qcom,cpr-corner-frequency-map: Array of tuples in which a tuple describes a corner to application processor frequency
				mapping.
				The 2 elements in one tuple are:
				[0]: => a virtual voltage corner.
				[1]: => the application processor frequency in Hz corresponding to the virtual corner.
				This property is required if qcom,cpr-speed-bin-max-corners is present.
- qcom,pvs-version-fuse-sel:	Array of 4 elements to indicate where to read the pvs version of the processor,
				and the fuse reading method.
				The 4 elements with index[0..3] are:
				[0]: => the fuse row number of the selector;
				[1]: => LSB bit position of the bits;
				[2]: => the number of bits;
				[3]: => fuse reading method, 0 for direct reading or 1 for SCM reading.
- qcom,cpr-quot-adjust-scaling-factor-max: The maximum allowed CPR target quotient scaling factor to use when
				calculating the quotient adjustment for a given virtual voltage corner. It
				corresponds to 'scaling' in this equation:
				quot_adjust = (freq_max - freq_corner) * scaling / 1000.
				This property is required if qcom,cpr-speed-bin-max-corners is present.
- qcom,cpr-fuse-init-voltage:	Array of quadruples in which each quadruple specifies a fuse location to
				read in order to get an initial voltage for a fuse corner. The fuse values
				are encoded as voltage steps higher or lower than the voltages defined in
				qcom,cpr-voltage-ceiling. Each step corresponds to the voltage defined by
				the qcom,cpr-init-voltage-step property.
				The 4 elements in one quadruple are:
				[0]: => the fuse row number of the bits
				[1]: => LSB bit position of the bits
				[2]: => number of the bits
				[3]: => fuse reading method, 0 for direct reading or 1 for SCM reading
				The quadruples are ordered from the lowest voltage fuse corner to the
				highest voltage fuse corner.
				A given cpr-regulator device must have either qcom,cpr-fuse-init-voltage
				specified or qcom,pvs-voltage-table (and its associated properties).
- qcom,cpr-init-voltage-ref:	Array of reference voltages in microvolts used when decoding the initial
				voltage fuse values.  The elements in the array are ordered from lowest
				voltage corner to highest voltage corner.  This property must be of length
				defined by qcom,cpr-fuse-corners.
				This property is required if qcom,cpr-fuse-init-voltage is present.
- qcom,cpr-init-voltage-step:	The voltage step size in microvolts of the CPR initial voltage fuses described by the
				qcom,cpr-fuse-init-voltage property.
				This property is required if qcom,cpr-fuse-init-voltage is present.
- mem-acc-supply:		Regulator to vote for the memory accelerator configuration.
				Not Present: memory accelerator configuration not supported.

Example:
	apc_vreg_corner: regulator@f9018000 {
		status = "okay";
		compatible = "qcom,cpr-regulator";
		reg = <0xf9018000 0x1000>, <0xfc4b8000 0x1000>;
		reg-names = "rbcpr", "efuse_addr";
		interrupts = <0 15 0>;
		regulator-name = "apc_corner";
		qcom,cpr-fuse-corners = <3>;
		regulator-min-microvolt = <1>;
		regulator-max-microvolt = <12>;

		qcom,pvs-fuse = <22 6 5 1>;
		qcom,pvs-fuse-redun-sel = <22 24 3 2 1>;
		qcom,pvs-fuse-redun = <22 27 5 1>;

		qcom,pvs-voltage-table =
			<1050000 1150000 1350000>,
			<1050000 1150000 1340000>,
			<1050000 1150000 1330000>,
			<1050000 1150000 1320000>,
			<1050000 1150000 1310000>,
			<1050000 1150000 1300000>,
			<1050000 1150000 1290000>,
			<1050000 1150000 1280000>,
			<1050000 1150000 1270000>,
			<1050000 1140000 1260000>,
			<1050000 1130000 1250000>,
			<1050000 1120000 1240000>,
			<1050000 1110000 1230000>,
			<1050000 1100000 1220000>,
			<1050000 1090000 1210000>,
			<1050000 1080000 1200000>,
			<1050000 1070000 1190000>,
			<1050000 1060000 1180000>,
			<1050000 1050000 1170000>,
			<1050000 1050000 1160000>,
			<1050000 1050000 1150000>,
			<1050000 1050000 1140000>,
			<1050000 1050000 1140000>,
			<1050000 1050000 1140000>,
			<1050000 1050000 1140000>,
			<1050000 1050000 1140000>,
			<1050000 1050000 1140000>,
			<1050000 1050000 1140000>,
			<1050000 1050000 1140000>,
			<1050000 1050000 1140000>,
			<1050000 1050000 1140000>,
			<1050000 1050000 1140000>;
		qcom,cpr-voltage-ceiling = <1050000 1150000 1280000>;
		qcom,cpr-voltage-floor = <1050000 1050000 1100000>;
		vdd-apc-supply = <&pm8226_s2>;
		vdd-apc-optional-prim-supply = <&ncp6335d>;
		vdd-apc-optional-sec-supply = <&fan53555>;
		vdd-mx-supply = <&pm8226_l3_ao>;
		qcom,vdd-mx-vmax = <1350000>;
		qcom,vdd-mx-vmin-method = <1>;
		qcom,vdd-apc-step-up-limit = <1>;
		qcom,vdd-apc-step-down-limit = <1>;
		qcom,cpr-ref-clk = <19200>;
		qcom,cpr-timer-delay = <5000>;
		qcom,cpr-timer-cons-up = <1>;
		qcom,cpr-timer-cons-down = <2>;
		qcom,cpr-irq-line = <0>;
		qcom,cpr-step-quotient = <15>;
		qcom,cpr-up-threshold = <1>;
		qcom,cpr-down-threshold = <2>;
		qcom,cpr-idle-clocks = <5>;
		qcom,cpr-gcnt-time = <1>;
		qcom,cpr-clamp-timer-interval = <1>;
		qcom,cpr-apc-volt-step = <5000>;

		qcom,cpr-fuse-row = <138 1>;
		qcom,cpr-fuse-bp-cpr-disable = <36>;
		qcom,cpr-fuse-bp-scheme = <37>;
		qcom,cpr-fuse-target-quot = <24 12 0>;
		qcom,cpr-fuse-target-quot-size = <12 12 12>;
		qcom,cpr-fuse-ro-sel = <54 38 41>;
		qcom,cpr-fuse-redun-sel = <138 57 1 1 1>;
		qcom,cpr-fuse-redun-row = <139 1>;
		qcom,cpr-fuse-redun-target-quot = <24 12 0>;
		qcom,cpr-fuse-redun-ro-sel = <46 36 39>;
		qcom,cpr-fuse-cond-min-volt-sel = <54 42 6 7 1>;
		qcom,cpr-cond-min-voltage = <1140000>;
		qcom,cpr-fuse-uplift-sel = <22 53 1 0 0>;
		qcom,cpr-uplift-voltage = <50000>;
		qcom,cpr-uplift-quotient = <0 0 120>;
		qcom,cpr-uplift-max-volt = <1350000>;
		qcom,cpr-uplift-speed-bin = <1>;
		qcom,speed-bin-fuse-sel = <22 0 3 0>;
		qcom,cpr-corner-map = <1 1 2 2 3 3 3 3 3 3 3 3>;
		qcom,cpr-corner-frequency-map =
				<1 300000000>,
				<2 384000000>,
				<3 600000000>,
				<4 787200000>,
				<5 998400000>,
				<6 1094400000>,
				<7 1190400000>,
				<8 1305600000>,
				<9 1344000000>,
				<10 1401600000>,
				<11 1497600000>,
				<12 1593600000>;
		qcom,pvs-version-fuse-sel = <22 4 2 0>;
		qcom,cpr-speed-bin-max-corners =
				<0 1 2 4 7>,
				<1 1 2 4 12>,
				<2 1 2 4 10>,
				<5 1 2 4 14>;
		qcom,cpr-fuse-target-quot-scale =
				<0 1>,
				<0 1>,
				<0 1>;
		qcom,cpr-quot-adjust-scaling-factor-max = <650>;
		qcom,cpr-fuse-init-voltage =
				<27 36 6 0>,
				<27 18 6 0>,
				<27 0 6 0>;
		qcom,cpr-init-voltage-ref = <1050000 1150000 1280000>;
		qcom,cpr-init-voltage-step = <10000>;
	};

