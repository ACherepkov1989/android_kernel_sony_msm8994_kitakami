/* Copyright (c) 2014, The Linux Foundation. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

&soc {
        msm_bus: qcom,kgsl-busmon{
                label = "kgsl-busmon";
                compatible = "qcom,kgsl-busmon";
        };

        gpubw: qcom,gpubw {
                compatible = "qcom,devbw";
                governor = "bw_vbif";
                qcom,src-dst-ports = <26 512>;
                qcom,bw-tbl =
                        <     0 /*  off     */ >,
                        <  1144 /*  150 MHz */ >,
                        <  1525 /*  200 MHz */ >,
                        <  2288 /*  300 MHz */ >,
                        <  3559 /*  466.5 MHz */ >,
                        <  4066 /*  533 MHz */ >,
                        <  4745 /*  622 MHz */ >,
                        <  5340 /*  700 MHz */ >,
                        <  7118 /*  933 MHz */ >;
        };

	msm_gpu: qcom,kgsl-3d0@fdb00000 {
		label = "kgsl-3d0";
		compatible = "qcom,kgsl-3d0", "qcom,kgsl-3d";
		reg = <0xfdb00000 0x40000>;
		reg-names = "kgsl_3d0_reg_memory";
		interrupts = <0 33 0>;
		interrupt-names = "kgsl_3d0_irq";
		qcom,id = <0>;

		qcom,chipid = <0x04010800>;

		qcom,initial-pwrlevel = <2>;

		qcom,idle-timeout = <8>; //<HZ/12>
		qcom,strtstp-sleepwake;

		/*
		 * Clocks = KGSL_CLK_CORE | KGSL_CLK_IFACE
		 * KGSL_CLK_RBBMTIMER
		 */
		qcom,clk-map = <0x00000086>;

		clocks = <&clock_mmss clk_oxili_gfx3d_clk>,
			<&clock_mmss clk_oxilicx_ahb_clk>,
			<&clock_mmss clk_oxili_rbbmtimer_clk>;
		clock-names = "core_clk", "iface_clk", "rbbmtimer_clk";

		/* Bus Scale Settings */
                qcom,gpubw-dev = <&gpubw>;
		qcom,bus-control;
                /*
                 * qcom,msm-bus structures below define
                 * GPU msm client and its vote data for
                 * each of available power levels
                 * (gpu-bus frequency combination)
                 */
		qcom,msm-bus,name = "grp3d";
		qcom,msm-bus,num-cases = <11>;
		qcom,msm-bus,num-paths = <1>;
		qcom,msm-bus,vectors-KBps =
                                <26 512 0 0>, <89 662 0 0>,

                                <26 512 0 1200000>,   // gpu=180 bus=150
                                <26 512 0 1600000>,   // gpu=180 bus=200
                                <26 512 0 2400000>,   // gpu=180 bus=300

                                <26 512 0 2400000>,   // gpu=300 bus=300
                                <26 512 0 3732000>,   // gpu=300 bus=466.5
                                <26 512 0 4976000>,   // gpu=300 bus=622

                                <26 512 0 3732000>,   // gpu=450 bus=466.5
                                <26 512 0 4976000>,   // gpu=450 bus=622
                                <26 512 0 5600000>,   // gpu=450 bus=700

                                <26 512 0 7464000>;   // gpu=600 bus=933

		/* GDSC oxili regulators */
		vddcx-supply = <&gdsc_oxili_cx>;
		vdd-supply = <&gdsc_oxili_gx>;

		/* IOMMU Data */
		iommu = <&kgsl_iommu>;

		/* Power levels  */
		qcom,gpu-pwrlevels {
			#address-cells = <1>;
			#size-cells = <0>;

			compatible = "qcom,gpu-pwrlevels";

			qcom,gpu-pwrlevel@0 {
				reg = <0>;
				qcom,gpu-freq = <600000000>;
				qcom,bus-freq = <11>;
			};

			qcom,gpu-pwrlevel@1 {
				reg = <1>;
				qcom,gpu-freq = <450000000>;
				qcom,bus-freq = <8>;
			};

			qcom,gpu-pwrlevel@2 {
				reg = <2>;
				qcom,gpu-freq = <300000000>;
				qcom,bus-freq = <5>;
			};

			qcom,gpu-pwrlevel@3 {
				reg = <3>;
				qcom,gpu-freq = <180000000>;
				qcom,bus-freq = <2>;
			};

			qcom,gpu-pwrlevel@4 {
				reg = <4>;
				qcom,gpu-freq = <27000000>;
				qcom,bus-freq = <0>;
			};
		};

                /*
                 * qcom,ocmem-bus-client defines
                 * ocmem msm client and its vote data for
                 * each of available power levels -
                 * the same levels that grp3d above uses
                 */
                qcom,ocmem-bus-client {
                        qcom,msm-bus,name = "gpu-ocmem";
                        qcom,msm-bus,num-cases = <11>;
                        qcom,msm-bus,num-paths = <1>;
                        qcom,msm-bus,vectors-KBps =
                                <89 662 0 0>,

                                <89 662 0 2880000>,     /* gpu=180 */
                                <89 662 0 2880000>,     /* gpu=180 */
                                <89 662 0 2880000>,     /* gpu=180 */

                                <89 662 0 4800000>,     /* gpu=300 */
                                <89 662 0 4800000>,     /* gpu=300 */
                                <89 662 0 4800000>,     /* gpu=300 */

                                <89 662 0 7200000>,     /* gpu=450 */
                                <89 662 0 7200000>,     /* gpu=450 */
                                <89 662 0 7200000>,     /* gpu=450 */

                                <89 662 0 9600000>;     /* gpu=600 */
                };
	};
};
