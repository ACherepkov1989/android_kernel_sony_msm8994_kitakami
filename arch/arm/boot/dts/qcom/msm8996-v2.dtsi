/* Copyright (c) 2014-2015, The Linux Foundation. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/*
 * As a general rule, only version-specific property overrides should be placed
 * inside this file. Common device definitions should be placed inside the
 * msm8996.dtsi file.
 */

#include "msm8996.dtsi"
#include "msm-arm-smmu-8996v2.dtsi"

/ {
	model = "Qualcomm Technologies, Inc. MSM 8996 v2";
	qcom,msm-id = <246 0x20000>;
};

&l2ccc_0 {
	qcom,clamped-reset-seq;
};

&l2ccc_1 {
	qcom,clamped-reset-seq;
};

&apcc_cpr {
	/delete-property/ qcom,cpr-hw-closed-loop;
};

&apc0_vreg {
	qcom,ldo-disable;
};

&apc1_vreg {
	qcom,ldo-disable;
};

&clock_gcc {
	compatible = "qcom,gcc-8996-v2";
};

&clock_debug {
	compatible = "qcom,cc-debug-8996-v2";
};

&clock_mmss {
	compatible = "qcom,mmsscc-8996-v2";
};

&clock_gpu {
	compatible = "qcom,gpucc-8996-v2";
	qcom,gfxfreq-corner-v2 =
		<	   0  0  0 >,
		<  125000000  0  4 >,
		<  214000000  1  4 >,
		<  315000000  2  4 >,
		<  500000000  3  5 >,
		<  604800000  4  6 >;
};

&gdsc_gpu_gx {
	clock-names = "bimc_core_clk", "core_clk", "core_root_clk";
	clocks = <&clock_gcc clk_gcc_mmss_bimc_gfx_clk>,
		 <&clock_gpu clk_gpu_gx_gfx3d_clk>,
		 <&clock_gpu clk_gfx3d_clk_src_v2>;
};

/* GPU overrides */
&msm_gpu {
	/* Updated chip ID */
	qcom,chipid = <0x05030001>;

	/* Power levels */
	qcom,gpu-pwrlevels {
		#address-cells = <1>;
		#size-cells = <0>;

		compatible = "qcom,gpu-pwrlevels";

		qcom,gpu-pwrlevel@0 {
			reg = <0>;
			qcom,gpu-freq = <604800000>;
			qcom,bus-freq = <13>;
			qcom,bus-min = <12>;
			qcom,bus-max = <13>;
		};

		qcom,gpu-pwrlevel@1 {
			reg = <1>;
			qcom,gpu-freq = <500000000>;
			qcom,bus-freq = <10>;
			qcom,bus-min = <9>;
			qcom,bus-max = <11>;
		};

		qcom,gpu-pwrlevel@2 {
			reg = <2>;
			qcom,gpu-freq = <315000000>;
			qcom,bus-freq = <7>;
			qcom,bus-min = <6>;
			qcom,bus-max = <8>;
		};

		qcom,gpu-pwrlevel@3 {
			reg = <3>;
			qcom,gpu-freq = <214000000>;
			qcom,bus-freq = <4>;
			qcom,bus-min = <3>;
			qcom,bus-max = <5>;
		};

		qcom,gpu-pwrlevel@4 {
			reg = <4>;
			qcom,gpu-freq = <125000000>;
			qcom,bus-freq = <2>;
			qcom,bus-min = <1>;
			qcom,bus-max = <3>;
		};

		qcom,gpu-pwrlevel@5 {
			reg = <5>;
			qcom,gpu-freq = <27000000>;
			qcom,bus-freq = <0>;
			qcom,bus-min = <0>;
			qcom,bus-max = <0>;
		};
	};
};

&soc {
	pcie_smmu {
		compatible = "qcom,pci-msm";
		/*
		 * no stream IDs specified since they will be added dynamically
		 * as PCI-e endpoints attach.
		 */
		iommus = <&anoc0_smmu>;
	};
};

&tsens {
	interrupts = <0 458 0>, <0 455 0>;
	qcom,sensors = <13>;
	qcom,slope = <2901 2846 3200 3200 3200 3200 3200 3200 3200 3200 3200 3200 3200>;
};
