--- drivers/video/msm/mdss/mdss_dsi_panel.c
+++ drivers/video/msm/mdss/mdss_dsi_panel.c
@@ -268,7 +268,7 @@ int mdss_dsi_panel_reset(struct mdss_panel_data *pdata, int enable)
 {
 	struct mdss_dsi_ctrl_pdata *ctrl_pdata = NULL;
 	struct mdss_panel_info *pinfo = NULL;
-	int i, rc = 0, mode_sel = 0;
+	int i, rc = 0;
 
 	if (pdata == NULL) {
 		pr_err("%s: Invalid input data\n", __func__);
@@ -307,22 +307,9 @@ int mdss_dsi_panel_reset(struct mdss_panel_data *pdata, int enable)
 			return rc;
 		}
 		if (!pinfo->cont_splash_enabled) {
-			if (gpio_is_valid(ctrl_pdata->disp_en_gpio)) {
-				rc = gpio_direction_output(
-					ctrl_pdata->disp_en_gpio, 1);
-				if (rc) {
-					pr_err("%s: unable to set dir for disp_en gpio\n",
-						__func__);
-					goto gpio_err;
-				}
-			}
+			if (gpio_is_valid(ctrl_pdata->disp_en_gpio))
+				gpio_set_value((ctrl_pdata->disp_en_gpio), 1);
 
-			rc = gpio_direction_output(ctrl_pdata->rst_gpio, 1);
-			if (rc) {
-				pr_err("%s: unable to set dir for rst gpio\n",
-					__func__);
-				goto gpio_err;
-			}
 			for (i = 0; i < pdata->panel_info.rst_seq_len; ++i) {
 				gpio_set_value((ctrl_pdata->rst_gpio),
 					pdata->panel_info.rst_seq[i]);
@@ -330,31 +317,19 @@ int mdss_dsi_panel_reset(struct mdss_panel_data *pdata, int enable)
 					usleep(pinfo->rst_seq[i] * 1000);
 			}
 
-			if (gpio_is_valid(ctrl_pdata->bklt_en_gpio)) {
-				rc = gpio_direction_output(
-					ctrl_pdata->bklt_en_gpio, 1);
-				if (rc) {
-					pr_err("%s: unable to set dir for bklt gpio\n",
-						__func__);
-					goto gpio_err;
-				}
-			}
+			if (gpio_is_valid(ctrl_pdata->bklt_en_gpio))
+				gpio_set_value((ctrl_pdata->bklt_en_gpio), 1);
 		}
 
 		if (gpio_is_valid(ctrl_pdata->lcd_mode_sel_gpio)) {
 			if ((pinfo->mode_sel_state == MODE_SEL_DSC_SINGLE) ||
 				(pinfo->mode_sel_state == MODE_GPIO_HIGH))
-				mode_sel = 1;
+				gpio_set_value(
+					ctrl_pdata->lcd_mode_sel_gpio, 1);
 			else if ((pinfo->mode_sel_state == MODE_SEL_SPLIT) ||
 				(pinfo->mode_sel_state == MODE_GPIO_LOW))
-				mode_sel = 0;
-			rc = gpio_direction_output(
-				ctrl_pdata->lcd_mode_sel_gpio, mode_sel);
-			if (rc) {
-				pr_err("%s: unable to set dir for mode_sel gpio\n",
-					__func__);
-				goto gpio_err;
-			}
+				gpio_set_value(
+					ctrl_pdata->lcd_mode_sel_gpio, 0);
 		}
 
 		if (ctrl_pdata->ctrl_state & CTRL_STATE_PANEL_INIT) {
@@ -377,15 +352,6 @@ int mdss_dsi_panel_reset(struct mdss_panel_data *pdata, int enable)
 		if (gpio_is_valid(ctrl_pdata->lcd_mode_sel_gpio))
 			gpio_free(ctrl_pdata->lcd_mode_sel_gpio);
 	}
-	return 0;
-gpio_err:
-	if (gpio_is_valid(ctrl_pdata->lcd_mode_sel_gpio))
-		gpio_free(ctrl_pdata->lcd_mode_sel_gpio);
-	if (gpio_is_valid(ctrl_pdata->bklt_en_gpio))
-		gpio_free(ctrl_pdata->bklt_en_gpio);
-	gpio_free(ctrl_pdata->rst_gpio);
-	if (gpio_is_valid(ctrl_pdata->disp_en_gpio))
-		gpio_free(ctrl_pdata->disp_en_gpio);
 	return rc;
 }
 
